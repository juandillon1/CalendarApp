{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/NavBar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","events","map","event","end","moment","toDate","start","eventAddnew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","NavBar","useSelector","state","auth","charAt","toUpperCase","slice","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endDate","clone","initEvent","notes","CalendarModal","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","formValues","setformValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","error","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccesor","endAccesor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","position","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c859186f.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    if( method === 'GET' ){\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data,method = 'GET' ) => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if( method === 'GET' ){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n};\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogOut: '[event] Event LogOut',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Login',\r\n    authStartRregister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start Token renew',\r\n    authLogOut: '[auth] LogOut',\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth', {email, password}, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            // Cuanto tarda para el vencimiento del token\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchSinToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchConToken('auth/renew', {});\r\n        const body = await resp.json();\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n            dispatch( checkingFinish() );\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogOut = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n};\r\n\r\nconst logout = () => ({type: types.authLogOut});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'juanc@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Juan',\r\n        rEmail: 'juancruzdillon@gmail.com',\r\n        rPassword: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if( rPassword !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword, rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                value={rPassword}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from 'moment';\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map( event => ({\r\n        ...event,\r\n        end: moment( event.end ).toDate(),\r\n        start: moment( event.start ).toDate()\r\n    }));\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nconst eventAddnew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const resp = await fetchConToken('events', event, 'POST');\r\n        const body = await resp.json();\r\n        const { uid, name } = getState().auth;\r\n        try{\r\n            if( body.ok ){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddnew(event));\r\n            }\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventLogOut = () => ({type: types.eventLogOut});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n        try{\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if( body.ok ){\r\n                dispatch( eventUpdated(event) );\r\n            } else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try{\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if( body.ok ){\r\n                dispatch( eventDeleted() );\r\n            } else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('events', {});\r\n        const body = await resp.json();\r\n        if( body.ok ){\r\n            const events = prepareEvents(body.eventos);\r\n            dispatch(eventLoaded(events));\r\n        }\r\n    };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogOut } from '../../actions/auth';\r\nimport { eventLogOut } from '../../actions/events';\r\n\r\nexport const NavBar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogOut = () => {\r\n        dispatch(eventLogOut());\r\n        dispatch(startLogOut());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name.charAt(0).toUpperCase() + name.slice(1)}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogOut}>\r\n                <i className=\"fas fa-sign-out-alt p-1\"></i>\r\n                <span>Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <span>{title} - </span>\r\n            <strong>{user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endDate = moment().clone(now).add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endDate.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const [dateStart, setdateStart] = useState(now.toDate());\r\n    const [dateEnd, setdateEnd] = useState(endDate.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n\r\n    const [formValues, setformValues] = useState(initEvent);\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setformValues( activeEvent );\r\n        } else{\r\n            setformValues(initEvent);\r\n        }\r\n    }, [activeEvent, setformValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setformValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    const handleStartDateChange = ( e ) => {\r\n        setdateStart( e );\r\n        setformValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n    const handleEndDateChange = ( e ) => {\r\n        setdateEnd( e );\r\n        setformValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    };\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha FIN debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n        if( title.trim().length < 2 ){\r\n            return setTitleValid(false);\r\n        }\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else{\r\n            dispatch( eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            // onAfterOpen={ afterOpenModal }\r\n            onRequestClose={ closeModal }\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n    const onClickFab = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={onClickFab}>\r\n            <i className=\"fas fa-plus\"/>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"/>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id) ? '#367CF7': '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccesor=\"start\"\r\n                endAccesor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n            />\r\n\r\n            <AddNewFab/>\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component= {(props)=> (\r\n                (isAuthenticated) ? (<Component {...props} />) : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n        component= {(props) => (\r\n            (isAuthenticated) ?  <Redirect to=\"/\" />: (<Component {...props}/>)\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {HashRouter, Redirect, Switch} from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n    if( checking ){\r\n        return (<i className=\"fas fa-sync fa-spin fa-5x\" style={{position: 'absolute', left: '50%'}}></i>);\r\n    }\r\n    return (\r\n        <>\r\n            <HashRouter>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid}/>\r\n                        <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid}/>\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n};\r\n\r\n\r\nexport const authReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogOut:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hour').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Soplar la vela',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Juan'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(e => e.id === action.payload.id ? action.payload : e)\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => e.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogOut:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);","import React from 'react';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CalendarApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}