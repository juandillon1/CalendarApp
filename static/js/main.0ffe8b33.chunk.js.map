{"version":3,"sources":["components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","types/types.js","actions/ui.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/AppRouter.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["LoginScreen","className","type","placeholder","value","NavBar","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","user","name","types","uiOpenModal","eventClearActiveEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","endDate","clone","initEvent","notes","start","toDate","end","CalendarModal","useState","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","setTitleValid","dispatch","useDispatch","modalOpen","useSelector","state","ui","activeEvent","calendar","formValues","setformValues","useEffect","handleInputChange","target","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","payload","eventAddnew","id","Date","getTime","_id","onChange","minDate","autoComplete","rows","AddNewFab","onClick","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","events","localStorage","getItem","lastView","setlastView","startAccesor","endAccesor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","setItem","view","onSelectSlot","selectable","AppRouter","exact","path","component","to","initialState","bgcolor","rootReducer","combineReducers","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ffe8b33.chunk.js","sourcesContent":["import React from 'react';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"ContraseÃ±a\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"ContraseÃ±a\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseÃ±a\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                Jose\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\">\r\n                <i className=\"fas fa-sign-out-alt p-1\"></i>\r\n                <span>Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el dÃ­a',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'DÃ­a',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver mÃ¡s (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <span>{title} - </span>\r\n            <strong>{user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import { types } from \"../types/types\";\r\n\r\nexport const eventAddnew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventAddnew, eventClearActiveEvent, eventUpdated } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endDate = moment().clone(now).add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endDate.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const [dateStart, setdateStart] = useState(now.toDate());\r\n    const [dateEnd, setdateEnd] = useState(endDate.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n\r\n    const [formValues, setformValues] = useState(initEvent);\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setformValues( activeEvent );\r\n        } else{\r\n            setformValues(initEvent);\r\n        }\r\n    }, [activeEvent, setformValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setformValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    const handleStartDateChange = ( e ) => {\r\n        setdateStart( e );\r\n        setformValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n    const handleEndDateChange = ( e ) => {\r\n        setdateEnd( e );\r\n        setformValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    };\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha FIN debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n        if( title.trim().length < 2 ){\r\n            return setTitleValid(false);\r\n        }\r\n        if(activeEvent){\r\n            dispatch(eventUpdated(formValues));\r\n        } else{\r\n            dispatch( eventAddnew({\r\n                ...formValues,\r\n                id: new Date().getTime(),\r\n                user: {\r\n                    _id: '123',\r\n                    name: 'Juan'\r\n                }\r\n            }));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            // onAfterOpen={ afterOpenModal }\r\n            onRequestClose={ closeModal }\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"TÃ­tulo del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripciÃ³n corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">InformaciÃ³n adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n    const onClickFab = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={onClickFab}>\r\n            <i className=\"fas fa-plus\"/>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleDelete = () => {\r\n        dispatch(eventDeleted());\r\n    };\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"/>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventClearActiveEvent, eventSetActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: '#367CF7',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccesor=\"start\"\r\n                endAccesor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n            />\r\n\r\n            <AddNewFab/>\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route exact path=\"/login\" component={LoginScreen}/>\r\n                        <Route exact path=\"/\" component={CalendarScreen}/>\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n","import moment from 'moment';\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [\r\n        {\r\n            id: new Date().getTime(),\r\n            title: 'CumpleaÃ±os',\r\n            start: moment().toDate(),\r\n            end: moment().add(2, 'hour').toDate(),\r\n            bgcolor: '#fafafa',\r\n            notes: 'Soplar la vela',\r\n            user: {\r\n                _id: '123',\r\n                name: 'Juan'\r\n            }\r\n        }\r\n    ],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(e => e.id === action.payload.id ? action.payload : e)\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => e.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);","import React from 'react';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CalendarApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}